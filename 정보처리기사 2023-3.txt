--- [정보처리기사 - 2023-3]

--- 01. 다음은 Java 코듸다. 올바른 출력 결과를 작성하시오.
	> public class main
	  {
	      public static void main(String [] args)
	      {
		  A b = new B ();
		  b.paint();
		  b.draw();
	      }
	  }

	  class A
	  {
	      public void paint()
	      {
		  System.out.print("A");
		  draw();
	      }

	      public void draw()
	      {
		  System.out.print("B");
		  draw();
	      }
	  }

	  class B extends A
	  {
	      public void paint()
	      {
		  super.draw();
		  System.out.print("C");
		  this.draw();
	      }

	      public void draw()
	      {
		  System.out.print("D");
	      }
	  }
	  
	  - super.draw() : B
	          draw() : D
            print(C)     : C
            this.draw()  : D
            b.draw       : D

          - BDCDD

--- 02. 다음 설명하는 용어를 보기에 맞게 골라 기호를 작성하시오.
	> 사용자가 사용자 이름 및 암호화 같은 자격 증명을 공유하지 않고도 타사 애플리케이션이 데이터 또는 리소스에 엑
	  세스 할 수 있도록 권한을 부여할 수 있는 개방형 표준 프로토콜이다.

	> 사용자가 데이터에 대한 제어를 유지하면서 리소스에 대한 엑세스권한을 부여할 수 있는 안전하고 표준화된 방법을
	  제공하며, 엑세스 토큰을 사용하여 타사 애플리케이션에 리소스에 대한 엑세스 권한을 부여하는 메커니즘을 사용자
	  에게 제공하는 방식으로 작동한다.

	> 사용자가 응용 프로그램에 대한 엑세스 권한을 부여하면 응용 프로그램은 사용자를 대신하여 사용자의 리소스 또는
	  데이터에 엑세스하는 데 사용할 수 있는 엑세스 토큰을 받는다.

	> 암호와 같은 사용자의 자격 증명은 타사 응용 프로그램과 공유되지 않으며 클라우드 스토리지 서비스, 온라인 마켓
	  플레이스 및 금융 서비스를 포함한 다른 많은 응용 프로그램 및 서비스에서도 사용된다.

	> Facebook, Twitter 및 LinkedIn과 같은 소셜 미디어 플랫폼에서 널리 사용되어 사용자가 소셜미디어 데이터에 대한
	  엑세스 권한을 타사 애플리케이션에 부여할 수 있도록 한다.

	> 타사 애플리케이션에 대한 사용자 자격 증명의 노출을 최소화하여 향상된 보안, 간소화된 애플리케이션 개발, 사용
	  자가 리소스에 대한 엑세스 권한을 쉽게 부여하거나 취소할 수 있도록 하여 향상된 사용자 환경등 여러가지 이점을
	  제공한다.

	> 보기
	  - NFT, JWT, SAML, accessToken, SSO, OIDC, Authentication, OAuth, Cookie, Refresh, Token

	  - OAuth

--- 03. 리눅스(Linux)에서 사용자에게 읽기/스기/실행 권한을 부여하고, 그룹에게는 읽기/실행을 부여하고 그 이외에는 실행
	권한을 test.txt 파일에 부여하는 명령어는 다음과 같다. 빈칸에 들어갈 답을 작성하시오.
	> ( (1) ) ( (2) ) test.txt
	  - chmond / 751

--- 04. 다음은 C언어 코드이다 알맞는 출력 결과를 작성하시오.
	  ===========================================================================================================
	> int test(int n)
	  {
	      int i, sum = 0;
	
	      for(i = 1; i <= n / 2; i++)
	      {
		  if(n%i ==0)
		      sum += i;
	      }


	      if(n == sum)
		  return 1;
	
	      return 0;
	  }



	  int main()
	  {
	      int i, sum = 0;
	      for(i = 2; i<= 100; i++)
	      {
		  if(test(i))
		      sum+=i;
	      }

	      printf("%d ", sum);

	      return 0;
	  }
	  ===========================================================================================================

	  // 1회전 : test(2)
	    
                     1 <= 1 
		     2 % 1 == 0
		     sum = 1
		     n == sum : false

	  // 정수의 약수들 중 자기 자신을 제외한 나머지의 숫자 합이 자기자신이 되는 경우를 구하기
	     ?? 

             n = 	6 / 28 / 
		1 2 3		
		1 2 4 7 14
		
	    * 완전수는 6 / 28 / 496 / 
	  - 34

--- 05. C언어에서 구조체의 멤버에 접근하기 위해 괄호안의 기호를 작성하시오.
	> typedef struct Data
	  {
	      char c;
	      int *numPtr;
	  } Data;

	  int main()
	  {
	      int num = 10;
	      Data d1;
	      Data *d2 = malloc(sizeof(struct Data));

	      d1.numPtr = &num;
	      d2()numPtr = &num;

	      printf("%d\n", *d1.numPtr);
	      printf("%d\n", *d2()numPtr);

	      free(d2);
	      return 0;
	  }

	  - .

--- 06. 다음 빈칸에 들어갈 UNION 연산의 결과값을 작성하시오. --> 문제 잘못됌
	> [테이블]
	  [T1]		[T2]
	  3		3
	  1		1
	  4		4

	  [쿼리]
	  SELECT A FROM T1
	  UNION
	  SELECT A FROM T2
	  ORDER BY DESC;

	  [결과 테이블]
	  []
	  []
	  []
	  []

	  - 4
	    3
	    2
	    1

--- 07. 다음 설명은 서버 접근 통제의 유형이다. 괄호 안에 들어갈 용어를 작성하시오.(영어약자로)
	> ( 1 ) 은/는 규칙 기반(Rule-Based) 접근통제 정책으로, 객체에 포함된 정보의 허용 등급과 접근 정보에 대하여 주
	  체가 갖는 접근 허가 권한에 근거하여 객체에 대한 접근을 제한하는 방법이다.

	> ( 2 ) 은/는 중앙 관리자가 사용자와 시스템의 상호관계를 통제하며 조직내 맡은 역할(Role)에 기초하여 자원에 대
	  한 접근을 제한하는 방법이다.

	> ( 3 ) 은/는 신분 기반(Identity-Based) 접근통제 정책으로 주체나 그룹의 신분에 근거하여 객체에 대한 접근을 제
	  한하는 방법이다.

	  - MAC / RBAC / DAC

--- 08. 다음 C언어 코드에 알맞는 출력값을 작성하시오.
	> int f(int n)
	  {
	      if(n<=1) return 1;
	      else return n*f(n-1)
	  }

	  int main()
	      printf("%d", f(7));

	  // 7 * 6 * 5 * 4 * 3 * 2 * 1
	  // 42 * 5 
	  // 210 * 4
	  // 840 * 3
	  // 2520 * 2
	  // 5040 * 1
	  - 5040

--- 09. 다음 설명에 대해 괄호 안에 알맞는 용어를 작성하시오. (영어 약자로 작성하시오.)
	> ( ) 은/는 자료를 일정한 크기로 정하여 순서대로 전송하는 자료의 전송 방식이다.
	> 셀이라 부르는 고정 길이 패킷을 이용하여 처리가 단순하고 고속망에 적합하며, 연속적으로 셀을 보낼 대 다중화를
	  하지 않고 셀단위로 동기가 이루어지지만 경우에 따라 동기식 시간 분할 다중화를 사용하기도 한다.
	> 가상 채널 (Virtual Channel) 기반의 연결 지향 서비스로 셀이라 부르는 고정 길이(53바이트)패킷을 사용하며 통계
	  적 다중화 방식을 이용한다.
	  - ATM ★

--- 10. 다음은 C언어의 포인터 문제이다. 알맞는 출력값을 작성하시오.
	> int main ()
	  {
	      char * p = "KOREA";
	      printf("%s", p);
	      printf("%s", p+1);
	      printf("%c", *p);
	      printf("%c", *(p+3) );
	      printf("%c", *p+4);

	  }

	  - KOREA
	  - OREA
	  - K
	  - E
	  - O

























































       
	          

